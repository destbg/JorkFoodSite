@inject IJSRuntime JS

@if (Products != null)
{
    <div id="cards" @ref="cardsElement">
        @foreach (var product in Products)
        {
            <div class="card" @onclick="() => OnProductClicked.InvokeAsync(product)">
                <div class="card-content">
                    <div class="card-info-wrapper">
                        <div class="card-info">
                            <i class="fa-duotone fa-apartment"></i>
                            <div class="card-info-title">
                                <h3>@product.Name</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private ElementReference cardsElement;
    [Parameter] public List<ProductDTO>? Products { get; set; }

    [Parameter] public EventCallback<ProductDTO> OnProductClicked { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("configureCards", cardsElement);
    }
}
