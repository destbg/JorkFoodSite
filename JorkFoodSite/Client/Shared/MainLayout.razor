@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager uriHelper

@if (hasInitialized)
{
    <NavMenu />
}

<main>
    @Body
</main>

@if (!pickedName)
{
    <div class="name-dialog">
        <div class="panel">
            <label>Име</label>
            <input type="text" @bind-value="name">
            <button @onclick="OnPickName">ОК</button>
        </div>
    </div>
}

<div class="person-name-btn" @onclick="() => pickedName = false">
    <i class="fa-solid fa-circle-user" />
</div>

<div class="person-name">
    @Constants.PersonName
</div>

@code {
    private string name = string.Empty;
    private bool pickedName;
    private bool hasInitialized;

    protected override async Task OnInitializedAsync()
    {
        name = await JS.InvokeAsync<string>("window.localStorage.getItem", "Name");
        Constants.PersonName = name;

        if (!string.IsNullOrEmpty(name))
        {
            pickedName = true;
        }

        hasInitialized = true;
    }

    private async Task OnPickName()
    {
        if (!string.IsNullOrEmpty(name))
        {
            Constants.PersonName = name;
            await JS.InvokeVoidAsync("window.localStorage.setItem", "Name", name);
            uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
        }
    }
}